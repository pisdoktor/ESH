var ENTRY_POINTS_CONNECTORS_SOURCE_NAME="entry-points-connectors";function createGeoJsonFeaturesCollection(){return{type:"FeatureCollection",features:[]}}function createGeoJsonLine(t,e){return{type:"Feature",geometry:{type:"LineString",coordinates:[t,e]}}}function EntryPoints(t,e,n){if(!n.reverseGeocodeService)throw new Error("In order to show entry points, you need to pass reverseGeocode service");this.options=n,this.poiData=t,this.poiMarker=e,this.reverseGeocodeService=n.reverseGeocodeService,this.entryPointsMarkers=[],this.entryPointsMarkersMapping=[],this.draw()}EntryPoints.prototype.draw=function(){this._drawCounter(),this.poiMarker.addEventListener("click",this.mainMarkerClick.bind(this))},EntryPoints.prototype.clearEntryPoints=function(){this.entryPointsMarkers.forEach((function(t){t.remove(),this.map.getSource(ENTRY_POINTS_CONNECTORS_SOURCE_NAME).setData(createGeoJsonFeaturesCollection())}),this),this.entryPointsMarkers=[],this.entryPointsMarkersMapping=[]},EntryPoints.prototype._drawCounter=function(){var t=document.createElement("div");t.className="entry-points-counter",t.innerText=String(this.poiData.entryPoints.length),this.poiMarker.appendChild(t)},EntryPoints.prototype.getEntryPointsAddresses=function(){var t=this.poiData.entryPoints.map((function(t){return{position:t.position.lng+","+t.position.lat}}));return this.reverseGeocodeService({batchItems:t}).then(function(t){for(var e=0;e<t.batchItems.length;e++)this.poiData.entryPoints[e].address=t.batchItems[e].addresses[0].address}.bind(this))},EntryPoints.prototype.mainMarkerClick=function(){this.entryPointsMarkers.length>0?this.clearEntryPoints():(this.renderEntryPoints(),this.getEntryPointsAddresses().then(function(){this.updateEntryPointMarkerPopups()}.bind(this)))},EntryPoints.prototype.renderEntryPoints=function(){var t=[this.poiData.position.lng,this.poiData.position.lat],e=createGeoJsonFeaturesCollection();this.poiData.entryPoints.forEach((function(n){var r=this.createEntryPointMarker(n);e.features.push(createGeoJsonLine(t,[n.position.lng,n.position.lat])),r.addTo(this.map),this.entryPointsMarkers.push(r),this.entryPointsMarkersMapping.push({entryPoint:n,entryPointMarker:r})}),this),this.map.getSource(ENTRY_POINTS_CONNECTORS_SOURCE_NAME).setData(e)},EntryPoints.prototype.bindMap=function(t){this.map=t},EntryPoints.prototype.createEntryPointMarker=function(t){var e=new tt.Marker({element:this.renderEntryPointMarkerElem(),anchor:"bottom"});return e.setPopup(this.getLoadingPopup()),e.setLngLat(t.position),e},EntryPoints.prototype.getLoadingPopup=function(){var t=document.createElement("div");t.setAttribute("class","loading-circle-small");var e=new tt.Popup({offset:[0,-38]});return e.setDOMContent(t),e},EntryPoints.prototype.updateEntryPointMarkerPopups=function(){this.entryPointsMarkersMapping.forEach(function(t){var e=t.entryPointMarker,n=t.entryPoint,r=e.getPopup().isOpen();e.getPopup().remove();var o=this.getEntryPointMarkerPopup(n);e.setPopup(o),r&&e.togglePopup()}.bind(this))},EntryPoints.prototype.getEntryPointMarkerPopup=function(t){var e={name:this.poiData.name,address:t.address.freeformAddress+", "+t.address.countryCodeISO3,classification:this.poiData.classification,position:t.position,type:t.type};return new window.SearchMarkerPopup(e,this.options)},EntryPoints.prototype.renderEntryPointMarkerElem=function(){var t=document.createElement("div");t.className="tt-entry-point-marker";var e=document.createElement("div");e.className="icon tt-icon-ic_entry_point",t.appendChild(e);var n=document.createElement("div");return n.className="pointer",e.appendChild(n),t},window.EntryPoints=window.EntryPoints||EntryPoints;